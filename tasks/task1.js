//Функція filterAdults приймає масив об'єктів, що представлє людей (з полями name та age),
//вам потрібно написати код, який повертає новий масив, який містить лише тих людей, чий вік більше або дорівнює 18.
// Приймає масив студентів та ім'я, і шукає студента з таким ім'ям
// Фільтрує масив людей і повертає лише тих, хто старший або дорівнює 18 років
// Визначення функції findByName
// Фільтрує масив людей і повертає лише тих, хто старший або дорівнює 18 років
// Функція filterAdults приймає масив об'єктів, що представляє людей (з полями name та age)
// і повертає новий масив, який містить лише тих людей, чий вік більше або дорівнює 18.
// Функція filterAdults приймає масив об'єктів, що представляють людей (з полями name та age)
// та повертає новий масив, який містить лише тих людей, чий вік більше або дорівнює 18
// Функція filterAdults приймає масив об'єктів, що представляють людей (з полями name та age)
// та повертає новий масив, який містить лише тих людей, чий вік більше або дорівнює 18
// Функція filterAdults приймає масив об'єктів, що представляють людей (з полями name та age)
// і повертає новий масив, який містить лише тих людей, чий вік більше або дорівнює 18.
// Функція filterAdults приймає масив об'єктів, що представляють людей (з полями name та age)
// і повертає новий масив, який містить лише тих людей, чий вік більше або дорівнює 18.
// tasks/task1.js
function filterAdults(people) {
  const adults = []; 

  for (let i = 0; i < people.length; i++) {
    
    if (people[i].age >= 18) {
      adults.push(people[i]); 
    }
  }

  return adults; 
}

module.exports = filterAdults; 


function findByName(students, name) {
  for (let i = 0; i < students.length; i++) {
    if (students[i].name === name) {
      return students[i]; 
    }
  }
  return null; 
}
